---
# tasks to run the fio benchmark

- name: get current block devices
  shell: lsblk -r >> 1

- name: Add AWS disk
  include_tasks: "{{playbook_dir}}/benchmarks/fio/include/add_disks/aws.yml"
  when: cloud == "aws"

- name: Add GCE disk
  include_tasks: "{{playbook_dir}}/benchmarks/fio/include/add_disks/gce.yml"
  when: cloud == "gce"

- name: Add Azure disk
  include_tasks: "{{playbook_dir}}/benchmarks/fio/include/add_disks/azure.yml"
  when: cloud == "azure"

- name: set get updated block devices
  shell: lsblk -r >> 2

# or should that be part?
- name: Get new block device prefix
  shell: diff 1 2 | grep disk | cut -d " " -f 2
  register: prefix

- name: Set block device path
  set_fact:
    FioDisk: /dev/{{prefix.stdout}}

- name: copy fio data
  copy:
    src: "{{playbook_dir}}/benchmarks/fio/data/" # Assumes you are in the dir of the playbook
    dest: ~/

- name: Update all packages
  package:
    name: "*"
    state: latest
  become: true
  when: update is defined

# make only for Cent-like systems
- name: Install EPEL repo RHEL/CentOS/Fedora
  package:
    name: epel-release
    state: latest
  when: ansible_os_family == "RedHat"
  become: true

- name: Install pip and its packages
  include_tasks: "{{playbook_dir}}/include/downloads/pip.yml"

- name: Download fio
  package:
    name: fio
    state: latest
  become: true

- name: Precondition SSD
  include_tasks: "{{playbook_dir}}/benchmarks/fio/include/precondition_ssd.yml"
  when:
    - precondition is defined
    - precondition == "true"

- name: Set ENDTIME
  set_fact:
    ENDTIME: "{{ lookup('pipe','date +%s')|int + duration|int }}"

- name: Run fio benchmark
  shell: sudo fio ~/fiojobs/{{jobfile}} --runtime={{interval}} --filename={{FioDisk}} --output-format=json >> ~/fio.json
  until: lookup('pipe','date +%s')|int > ENDTIME|int
  delay: 0
  retries: 10000

- name: Parse Fio Result file
  shell: python ~/parser.py "{{benchmark}}" "{{cloud}}" "{{hostvars['localhost'].instance_type}}" "{{hostvars['localhost'].region}}" "{{secret_key}}" "{{ingress_url}}" "{{os}}" "{{interval}}" "{{jobfile}}" >> parser_output.txt
  when: ingress_url != "127.0.0.1"

- name: print responce values
  include_tasks: "{{playbook_dir}}/benchmarks/fio/include/res.yml"
