- name: Run HPL
  hosts: HPL-instance
  become: true
  become_user: root # refactor to not run as root
  become_method: sudo

  vars:
    # Used as metadata for parser
    test_type: HPL
    cloud: AWS
    region: us-west-2
    instance_type: t2.mirco

    # Used to determine which test to run
    size: small
    duration: 3600 # One hour

    # used for relaying results
    secret_key: super_secret # If passed in via extra-vars, it may not contain spaces
    ingress_url: 127.0.0.1


  tasks:
    - name: Copy HPL files
      copy:
        src: "{{playbook_dir}}/" # Assumes you are at the top level of the project
        dest: ~/

    - name: Update all packages
      package:
        name: "*"
        state: latest

    # make only for Cent-like systems
    - name: Install EPEL repo RHEL/CentOS/Fedora
      package:
        name: epel-release
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Install HPL Dependencies
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - gcc-gfortran
        - atlas
        - openmpi
        - openmpi-devel
        - nmon # not required by HPL, but useful for monitering the system

    - name: Download pip
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: ~/

    - name: Install pip
      shell: python get-pip.py
      args:
        chdir: ~/

    - name: Install python packages
      shell: pip install "{{ item }}"
      with_items:
        - pandas
        - requests

    - name: Download and extract HPL
      unarchive:
        src: http://www.netlib.org/benchmark/hpl/hpl-2.2.tar.gz
        dest: ~/
        remote_src: true

    - name: Copy makefile
      copy:
        src: ~/Make.x86_64
        dest: ~/hpl-2.2/
        remote_src: true

    - name: Compile HPL
      shell: make arch=x86_64
      args:
        chdir: ~/hpl-2.2/

    - name: Set ENDTIME
      set_fact:
        ENDTIME: "{{ lookup('pipe','date +%s')|int + duration|int }}"

    # add binaries to /usr/bin ??

    - name: set num processors
      set_fact:
        p: "{{ ansible_processor_vcpus }}"

    # Run HPL until the duration has elapsed
    - name: Run HPL Repeatedly
      shell: /usr/lib64/openmpi/bin/mpirun --allow-run-as-root -np {{p}} ~/hpl-2.2/bin/x86_64/xhpl >> results.txt
      args:
        chdir: ~/{{size}}
      until: lookup('pipe','date +%s')|int > ENDTIME|int
      delay: 0
      retries: 10000

      # Post parse and post the results to a server
    - name: Run Python results Parser
      shell: python /root/parser.py "{{test_type}}" "{{cloud}}" "{{instance_type}}" "{{region}}" "{{secret_key}}" "{{ingress_url}}" >> parser_output.txt
      args:
        chdir: /root/{{size}}
      when: ingress_url != "127.0.0.1"
