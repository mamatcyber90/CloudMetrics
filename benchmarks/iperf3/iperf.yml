---

# iperf benchmark

- name: add ports to instance
  include_tasks: "{{playbook_dir}}/benchmarks/iperf3/include/iperf_ports.yml"

- name: copy iperf data
  copy:
    src: "{{playbook_dir}}/benchmarks/iperf3/data/" # Assumes you are in the dir of the playbook
    dest: ~/

- name: Update all packages
  package:
    name: "*"
    state: latest
  become: true
  when: update is defined

# make only for Cent-like systems
- name: Install EPEL repo RHEL/CentOS/Fedora
  package:
    name: epel-release
    state: latest
  when: ansible_os_family == "RedHat"
  become: true

- name: Install iperf3
  package:
    name: iperf3
    state: latest
  become: true

- name: Install pip and its packages
  include_tasks: "{{playbook_dir}}/include/downloads/pip.yml"

# Run iperf3 benchmark

- name: Start recieving iperf server
  shell: iperf3 -s -D
  when: inventory_hostname == iperf3_recieving

- name: Set ENDTIME
  set_fact:
    ENDTIME: "{{ lookup('pipe','date +%s')|int + duration|int }}"

- name: make script executable
  file:
    path: ./run.sh
    mode: 0700

- name: run iperf3 and ping network during tests
  shell: ./run.sh "{{interval}}" "{{iperf3_recieving_private}}"
  until: lookup('pipe','date +%s')|int > ENDTIME|int
  delay: 0
  retries: 10000
  when: inventory_hostname == iperf3_sending

- name: get Jitter list (ping stddev)
  shell: cat pingout.txt | grep rtt | cut -d " " -f 4 | cut -d "/" -f 4 >> jitter.txt

# run python script
- name: Parse iperf Result file
  shell: python ~/parser.py "{{benchmark}}" "{{cloud}}" "{{hostvars['localhost'].instance_type}}" "{{hostvars['localhost'].region}}" "{{secret_key}}" "{{ingress_url}}" "{{os}}" >> parser_output.txt
  when:
    - ingress_url != "127.0.0.1"
    - inventory_hostname == iperf3_sending

# Print responce

- name: Register Jitter Responce code
  shell: cat jitter_responce.txt
  register: jitter
  when: inventory_hostname == iperf3_sending

- name: Register Mbps Responce code
  shell: cat mbps_responce.txt
  register: mbps
  when: inventory_hostname == iperf3_sending

- name: Print Jitter Responce code
  debug:
    msg: "{{jitter.stdout}}"
  when: inventory_hostname == iperf3_sending

- name: Print Mbps Responce code
  debug:
    msg: "{{mbps.stdout}}"
  when: inventory_hostname == iperf3_sending

- name: Set passed result
  set_fact:
    passed: true
  when:
    - jitter.stdout == "200"
    - mbps.stdout == "200"
