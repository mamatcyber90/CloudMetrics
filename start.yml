- name: Provision Cloud Instance and Run HPL
  hosts: localhost
  connection: local

  vars:

    # Variables used by all clouds
    cloud: AWS
    region: us-east-2
    size: small # size will determine image and instance_type, which is cloud specific
    duration: 3600 # One hour
    count: 1 # number of VMs

    # AWS Specific
    key: my_key

    # Azure Specific vars
    azure_sub_id: 123-a23-32


    # Metadata for the parser
    test_type: HPL
    secret_key: super_secret # If passed in via extra-vars, it may not contain spaces
    ingress_url: 127.0.0.1

    # used to authenticate each of the different clouds
    ssh_user: centos
    ssh_pass: foobar
    ssh_key_dir: ./.ssh/foo.pem

  tasks:

    #
    - name: get public ssh key
      shell: cat {{ssh_public_dir}}
      register: ssh_public_key
      when: ssh_public_dir is defined

    # get cloud-specific OS vars
    # cannot be based in because Azure handle's images differently
    - name: Set GCE Win password
      set_fact:
        gce_pass: "{{lookup('pipe','openssl rand -base64 32 | head -c 20')}}"

    - name: Set Cloud image
      include_tasks: "{{playbook_dir}}/include/os/{{cloud}}_os.yml"

    # Get cloud-specific instance type
    - name: Set Cloud Instance type
      include_tasks: "{{playbook_dir}}/include/instance_types/{{cloud}}_instances.yml"
      when: instance_type is not defined

    # Used by Azure in order to sequentially spawn multiple VMs
    - name: Get random string of chars of length COUNT
      shell: openssl rand -hex 50 | head -c {{count}}
      register: output
      when: cloud == "azure"

    # turns that string into a proper YAML list
    - name: get list of chars
      set_fact:
        nums: "{{output.stdout | list}}"
      when: cloud == "azure"

    # Launches the instances
    - name: Launch Non-Azure Cloud Instance
      include_tasks: "{{playbook_dir}}/include/launch/launch_{{cloud}}.yml"
      when: cloud != 'azure'

    # Because Azure's launch pattern is different, it must get it's own task
    - name: Launch Azure Instance
      include_tasks: "{{playbook_dir}}/include/launch/launch_{{cloud}}.yml"
      when: cloud == "azure"
      with_items: "{{nums}}"

    # It isnt done with every vm to save time while the others are booting
    - name: Wait for last Azure VM to start
      wait_for:
        host: "{{ azure_vm.properties.networkProfile.networkInterfaces.0.properties.ipConfigurations.0.properties.publicIPAddress.properties.ipAddress}}"
        port: 22
        state: started
      when: cloud == "azure"

    - name: Add hosts to inventory
      include_tasks: "{{playbook_dir}}/include/inventory/add_hosts.yml"

    - name: prep Windows for Ansible
      include_tasks: "{{playbook_dir}}/include/windows/prep_win.yml"
      when: os | regex_search("windows")


# Run Benchmark
- import_playbook: benchmark_runner.yml
  when: not os | regex_search("windows")

- import_playbook: benchmark_runner_win.yml
  when: os | regex_search("windows")

# terminate the instances
- import_playbook: terminate.yml
